// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
Compressor* RobotMap::pnuemCompresso = NULL;
DoubleSolenoid* RobotMap::pnuemDoubleSolenoid = NULL;
SpeedController* RobotMap::driveTrainLeftRear = NULL;
SpeedController* RobotMap::driveTrainLeftFront = NULL;
SpeedController* RobotMap::driveTrainRightRear = NULL;
SpeedController* RobotMap::driveTrainRightFront = NULL;
RobotDrive* RobotMap::driveTrainmecanum = NULL;
Servo* RobotMap::servoSystemHorizontal = NULL;
Servo* RobotMap::servoSystemVertical = NULL;
Encoder* RobotMap::pIDTalQuadratureEncoder = NULL;
SpeedController* RobotMap::pIDTalTal = NULL;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	LiveWindow* lw = LiveWindow::GetInstance();

	pnuemCompresso = new Compressor(0);
	
	
	pnuemDoubleSolenoid = new DoubleSolenoid(0, 3, 2);      
	lw->AddActuator("Pnuem", "DoubleSolenoid", pnuemDoubleSolenoid);
	
	driveTrainLeftRear = new Jaguar(0);
	lw->AddActuator("DriveTrain", "LeftRear", (Jaguar*) driveTrainLeftRear);
	
	driveTrainLeftFront = new Jaguar(1);
	lw->AddActuator("DriveTrain", "LeftFront", (Jaguar*) driveTrainLeftFront);
	
	driveTrainRightRear = new Jaguar(3);
	lw->AddActuator("DriveTrain", "RightRear", (Jaguar*) driveTrainRightRear);
	
	driveTrainRightFront = new Jaguar(7);
	lw->AddActuator("DriveTrain", "RightFront", (Jaguar*) driveTrainRightFront);
	
	driveTrainmecanum = new RobotDrive(driveTrainLeftFront, driveTrainLeftRear,
              driveTrainRightFront, driveTrainRightRear);
	
	driveTrainmecanum->SetSafetyEnabled(false);
        driveTrainmecanum->SetExpiration(0.1);
        driveTrainmecanum->SetSensitivity(0.5);
        driveTrainmecanum->SetMaxOutput(1.0);

        driveTrainmecanum->SetInvertedMotor(RobotDrive::kFrontRightMotor, true);
        driveTrainmecanum->SetInvertedMotor(RobotDrive::kRearRightMotor, true);
	servoSystemHorizontal = new Servo(5);
	lw->AddActuator("ServoSystem", "Horizontal", servoSystemHorizontal);
	
	servoSystemVertical = new Servo(6);
	lw->AddActuator("ServoSystem", "Vertical", servoSystemVertical);
	
	pIDTalQuadratureEncoder = new Encoder(2, 3, false, Encoder::k4X);
	lw->AddSensor("PIDTal", "QuadratureEncoder", pIDTalQuadratureEncoder);
	pIDTalQuadratureEncoder->SetDistancePerPulse(1.0);
        pIDTalQuadratureEncoder->SetPIDSourceParameter(Encoder::kRate);
	pIDTalTal = new Talon(2);
	lw->AddActuator("PIDTal", "Tal", (Talon*) pIDTalTal);
	


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
